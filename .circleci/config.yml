version: 2

jobs:
  run-tests:
    docker:
      - image: circleci/python:3.6.3-jessie
        environment:
          SECRET_KEY: my_precious
          APP_SETTINGS: testing
          DATABASE_TEST_URL: postgresql://postgres:@localhost/metagenscope_test
          MONGODB_TEST_HOST: mongodb://localhost/metagenscope_test
      - image: metagenscope/postgres:0afd77cd
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
      - image: circleci/mongo

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Python Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Lint codebase
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Provision database
          command: |
            . venv/bin/activate
            python manage.py recreate_db

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py cov

      - store_artifacts:
          path: htmlcov
          destination: test-reports

  build_staging_images:
    docker:
      - image: circleci/node:9.2.0

    environment:
      TAG: staging
      DOCKER_ORG: metagenscope

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Set COMMIT env var
          command: echo 'export COMMIT=${CIRCLE_SHA1::8}' >> $BASH_ENV

      - run:
          name: Sign in to Docker Hub
          command: docker login -u $DOCKER_ID -p $DOCKER_PASSWORD

      - run:
          name: Build and push mongo-db
          environment:
            DB_SERVICE: mongo
          command: |
            docker build ./database_docker/mongo_db -t $DB_SERVICE:$COMMIT
            docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
            docker push $DOCKER_ORG/$DB_SERVICE

      - run:
          name: Build and push metagenscope-db
          environment:
            DB_SERVICE: metagenscope-db
          command: |
            docker build ./database_docker/postgres_db -t $DB_SERVICE:$COMMIT
            docker tag $DB_SERVICE:$COMMIT $DOCKER_ORG/$DB_SERVICE:$TAG
            docker push $DOCKER_ORG/$DB_SERVICE

      - run:
          name: Build and push metagenscope-service
          environment:
            MAIN_SERVICE: metagenscope-service
          command: |
            docker build . -t $MAIN_SERVICE:$COMMIT
            docker tag $MAIN_SERVICE:$COMMIT $DOCKER_ORG/$MAIN_SERVICE:$TAG
            docker push $DOCKER_ORG/$MAIN_SERVICE

  deploy_staging:
    docker:
      - image: circleci/node:9.2.0

    working_directory: ~/repo

    steps:
      - run:
          name: Deploy to emptyfish.net
          command: |
            set -x
            echo "$DROPLET_IP $DROPLET_HOST_KEY" > ~/tmp_auth_hosts
            ssh -A -o "UserKnownHostsFile ~/tmp_auth_hosts" $DROPLET_USER@$DROPLET_IP "cd /home/metagenscope/metagenscope-app && sh deploy.sh"

workflows:
  version: 2
  test-and-deploy-staging:
    jobs:
      - run-tests:
          context: org-global
      - build_staging_images:
          context: org-global
          filters:
            branches:
              only: develop
          requires:
            - run-tests
      - deploy_staging:
          context: org-global
          filters:
            branches:
              only: develop
          requires:
            - build_staging_images
