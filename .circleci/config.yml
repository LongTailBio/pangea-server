version: 2

docker_build: &docker_build
  command: |
    cd $DOCKERFILE_PATH
    docker build . --file $DOCKERFILE_NAME --tag $SERVICE_NAME:$COMMIT
    docker tag $SERVICE_NAME:$COMMIT $DOCKER_ORG/$SERVICE_NAME:$DOCKER_TAG
    if [ "$PUSH_GIT_COMMIT" = true ] ; then \
      docker tag $SERVICE_NAME:$COMMIT $DOCKER_ORG/$SERVICE_NAME:$COMMIT; \
    fi
    if [ "$PUSH_GIT_TAG" = true ] && [ -n "$CIRCLE_TAG" ] ; then \
      # Remove leading 'v'
      SEMVER=${CIRCLE_TAG#v} && \
      # Tag full semver
      docker tag $SERVICE_NAME:$COMMIT $DOCKER_ORG/$SERVICE_NAME:$SEMVER && \
      # Tag major.minor
      docker tag $SERVICE_NAME:$COMMIT $DOCKER_ORG/$SERVICE_NAME:${SEMVER%.*} && \
      # Tag only major
      docker tag $SERVICE_NAME:$COMMIT $DOCKER_ORG/$SERVICE_NAME:${SEMVER%.*.*}; \
    fi
    docker push $DOCKER_ORG/$SERVICE_NAME

# Common steps for building server Docker images
build_steps: &build_steps
  docker:
    - image: circleci/node:9.2.0

  steps:
    - checkout

    - setup_remote_docker

    - run:
        name: Set COMMIT env var
        command: echo 'export COMMIT=${CIRCLE_SHA1::8}' >> $BASH_ENV

    - run:
        name: Sign in to Docker Hub
        command: docker login -u $DOCKER_ID -p $DOCKER_PASSWORD

    - run:
        name: Build and push mongo-db
        environment:
          SERVICE_NAME: mongo
          DOCKERFILE_PATH: "./database_docker/mongo_db"
          DOCKERFILE_NAME: "Dockerfile"
        <<: *docker_build

    - run:
        name: Build and push metagenscope-db
        environment:
          SERVICE_NAME: metagenscope-db
          DOCKERFILE_PATH: "./database_docker/postgres_db"
          DOCKERFILE_NAME: "Dockerfile"
        <<: *docker_build

    - run:
        name: Build and push redis
        environment:
          SERVICE_NAME: redis
          DOCKERFILE_PATH: "./database_docker/redis"
          DOCKERFILE_NAME: "Dockerfile"
        <<: *docker_build

    - run:
        name: Build and push rabbitmq
        environment:
          SERVICE_NAME: rabbitmq
          DOCKERFILE_PATH: "./database_docker/rabbitmq"
          DOCKERFILE_NAME: "Dockerfile"
        <<: *docker_build

    - run:
        name: Build and push metagenscope-worker
        environment:
          SERVICE_NAME: metagenscope-worker
          DOCKERFILE_PATH: "."
          DOCKERFILE_NAME: "Dockerfile-worker"
        <<: *docker_build

    - run:
        name: Build and push metagenscope-service
        environment:
          SERVICE_NAME: metagenscope-service
          DOCKERFILE_PATH: "."
          DOCKERFILE_NAME: "Dockerfile"
        <<: *docker_build


# CircleCI Jobs
jobs:
  test_app:
    docker:
      - image: circleci/python:3.6.3-jessie
        environment:
          SECRET_KEY: my_precious
          APP_SETTINGS: testing
          DATABASE_TEST_URL: postgresql://postgres:@localhost/metagenscope_test
          MONGODB_TEST_HOST: mongodb://localhost/metagenscope_test
      - image: metagenscope/postgres:0afd77cd
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
      - image: circleci/mongo

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Python Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Lint app
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Provision database
          command: |
            . venv/bin/activate
            python manage.py recreate_db

      - run:
          name: Run application tests
          command: |
            . venv/bin/activate
            make cov

      - store_artifacts:
          path: htmlcov
          destination: test-reports

  build_staging:
    <<: *build_steps
    environment:
      DOCKER_TAG: staging
      PUSH_GIT_COMMIT: true
      PUSH_GIT_TAG: false
      DOCKER_ORG: metagenscope

  deploy_staging:
    docker:
      - image: circleci/node:9.2.0

    working_directory: ~/repo

    steps:
      - run:
          name: Deploy to emptyfish.net
          command: |
            set -x
            echo "$STAGING_MACHINE_IP $STAGING_MACHINE_HOST_KEY" > ~/tmp_auth_hosts
            ssh -A -o "UserKnownHostsFile ~/tmp_auth_hosts" $STAGING_MACHINE_USER@$STAGING_MACHINE_IP "cd /home/metagenscope/metagenscope-app && sh deploy.sh"

  build_release:
    <<: *build_steps
    environment:
      DOCKER_TAG: latest
      PUSH_GIT_COMMIT: false
      PUSH_GIT_TAG: true
      DOCKER_ORG: metagenscope


workflows:
  version: 2

  app_cd:
    jobs:
      - test_app:
          context: metagenscope-staging
          filters:
            tags:
              only: /^v.*/
      - build_staging:
          context: metagenscope-staging
          filters:
            branches:
              only: develop
          requires:
            - test_app
      - deploy_staging:
          context: metagenscope-staging
          filters:
            branches:
              only: develop
          requires:
            - build_staging
      - build_release:
          context: metagenscope-staging
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - test_app
